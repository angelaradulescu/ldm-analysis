library(lattice)
library(lme4)
library(lmerTest)
library(psycho)
data <- read.csv('https://raw.githubusercontent.com/angelaradulescu/ldm-analysis/main/ProcessedData/Feedback_Processed_CombinedBehavioralEyetrackingData.csv')
print(data)
View(data)
## Model.
m1 <- lmer(data = data, formula = Entropy ~ Age*LearnedFeat + (1|Subj))
summary(m1)
## Omnibus test.
car::Anova(m1, type = '3')
## More Mixed Model ##
## Age*WithinGameTrial*Game*LearnedFeat as fixed effects Subj as random effect. ##
m2 <- lmer(data = data, formula = Entropy ~ Age*WithinGameTrial*Game*LearnedFeat + (1|Subj))
summary(m2)
## Omnibus test.
car::Anova(m2, type = '3')
## More Mixed Model ##
## Age*WithinGameTrial*Game*LearnedFeat*IQ as fixed effects Subj as random effect. ##
m2 <- lmer(data = data, formula = Entropy ~ Age*WithinGameTrial*Game*LearnedFeat*IQ + (1|Subj))
summary(m2)
## Omnibus test.
car::Anova(m2, type = '3')
factored_data <- data %>%
mutate(age_group = as.factor(AgeGroup),
within_game_trial = as.factor(WithinGameTrial),
game = as.factor(Game))
data <- read.csv('https://raw.githubusercontent.com/angelaradulescu/ldm-analysis/main/ProcessedData/Feedback_Processed_CombinedBehavioralEyetrackingData.csv')
library(lattice)
library(lme4)
library(lmerTest)
library(psycho)
factored_data <- data %>%
mutate(age_group = as.factor(AgeGroup),
within_game_trial = as.factor(WithinGameTrial),
game = as.factor(Game))
library(lattice)
library(lme4)
library(lmerTest)
library(psycho)
library(magrittr) # needs to be run every time you start R and want to use %>%
library(dplyr)    # alternatively, this also loads %>%
factored_data <- data %>%
mutate(age_group = as.factor(AgeGroup),
within_game_trial = as.factor(WithinGameTrial),
game = as.factor(Game))
View(factored_data)
library(lattice)
library(lme4)
library(lmerTest)
library(psycho)
library(magrittr) # needs to be run every time you start R and want to use %>%
library(dplyr)    # alternatively, this also loads %>%
data <- read.csv('https://raw.githubusercontent.com/angelaradulescu/ldm-analysis/main/ProcessedData/Feedback_Processed_CombinedBehavioralEyetrackingData.csv')
# Clean data if needed
# clean_feedback_data <- feedback_data %>%
#   clean_names() %>%
#   select('subj', 'iq', 'within_game_trial', 'trial', 'game', 'entropy', 'age_group', 'po_l', 'rt', 'learned_feat', 'correct') %>%
#   rename('pol' = 'po_l')
#
# clean_feedback_data$age_group <- as.factor(clean_feedback_data$age_group)
# Continunous Age
## Basic Mixed Model ##
## just Age*LearnedFeat as fixed effects Subj as random effect. ##
m1 <- lmer(data = data, formula = Entropy ~ Adult*LearnedFeat + (1|Subj))
summary(m1)
## Omnibus test.
car::Anova(m1, type = '3')
## just Age*LearnedFeat as fixed effects Subj as random effect. ##
m1 <- lmer(data = data, formula = Entropy ~ Age*LearnedFeat + (1|Subj))
summary(m1)
## Omnibus test.
car::Anova(m1, type = '3')
factored_data <- data %>%
mutate(within_game_trial = as.factor(WithinGameTrial),
game = as.factor(Game))
View(factored_data)
m2 <- lmer(data = data, formula = Entropy ~ Age*within_game_trial*game*LearnedFeat*IQ + (1|Subj))
summary(m2)
m2 <- lmer(data = factored_data, formula = Entropy ~ Age*within_game_trial*game*LearnedFeat*IQ + (1|Subj))
summary(m2)
m2 <- lmer(data = factored_data, formula = Entropy ~ Age*within_game_trial*game*LearnedFeat*IQ + (1|Subj))
library(lattice)
library(lme4)
library(lmerTest)
library(psycho)
library(magrittr) # needs to be run every time you start R and want to use %>%
library(dplyr)    # alternatively, this also loads %>%
data <- read.csv('https://raw.githubusercontent.com/angelaradulescu/ldm-analysis/main/ProcessedData/Feedback_Processed_CombinedBehavioralEyetrackingData.csv')
# Clean data if needed
# clean_feedback_data <- feedback_data %>%
#   clean_names() %>%
#   select('subj', 'iq', 'within_game_trial', 'trial', 'game', 'entropy', 'age_group', 'po_l', 'rt', 'learned_feat', 'correct') %>%
#   rename('pol' = 'po_l')
#
# clean_feedback_data$age_group <- as.factor(clean_feedback_data$age_group)
#######Continunous Age#######
## Basic Mixed Model ##
## just Age*LearnedFeat as fixed effects Subj as random effect. ##
m1 <- lmer(data = data, formula = Entropy ~ Age*LearnedFeat + (1|Subj))
summary(m1)
## Omnibus test.
car::Anova(m1, type = '3')
## More Mixed Model ##
## Age*WithinGameTrial*Game*LearnedFeat*IQ as fixed effects Subj as random effect. ##
# fit warnings: Some predictor variables are on very different scales: consider rescaling
factored_data <- data %>%
mutate(within_game_trial = as.factor(WithinGameTrial),
game = as.factor(Game))
m2 <- lmer(data = factored_data, formula = Entropy ~ Age*LearnedFeat*IQ + (1|Subj))
summary(m2)
summary(m2)
## Omnibus test.
car::Anova(m2, type = '3')
car::Anova(m1, type = '3')
m2 <- lmer(data = factored_data, formula = Entropy ~ Age*LearnedFeat*Game + (1|Subj))
summary(m2)
## Omnibus test.
car::Anova(m2, type = '3')
m1 <- lmer(data = data, formula = Entropy ~ Age*LearnedFeat*Game + (1|Subj))
summary(m1)
## Omnibus test.
car::Anova(m1, type = '3')
factored_data <- data %>%
mutate(within_game_trial = as.factor(WithinGameTrial),
game = as.factor(Game))
m2 <- lmer(data = factored_data, formula = Entropy ~ Age*LearnedFeat*IQ + (1|Subj))
summary(m2)
## Omnibus test.
car::Anova(m2, type = '3')
m1 <- lmer(data = data, formula = Entropy ~ Age*IQ + (1|Subj))
summary(m1)
## Omnibus test.
car::Anova(m1, type = '3')
m2 <- lmer(data = factored_data, formula = Entropy ~ Age*WithinGameTrial + (1|Subj))
summary(m2)
## Omnibus test.
car::Anova(m2, type = '3')
m2 <- lmer(data = factored_data, formula = Entropy ~ Age*WithinGameTrial + (1|Subj))
summary(m2)
## Omnibus test.
car::Anova(m2, type = '3')
m2 <- lmer(data = factored_data, formula = Entropy ~ Age*Game + (1|Subj))
summary(m2)
## Omnibus test.
car::Anova(m2, type = '3')
m2 <- lmer(data = data, formula = Entropy ~ Age*WithinGameTrial*Game*LearnedFeat + (1|Subj))
summary(m2)
# Omnibus test.
car::Anova(m2, type = '3')
m2 <- lmer(data = data, formula = Entropy ~ Age*WithinGameTrial*Game*LearnedFeat*IQ + (1|Subj))
summary(m2)
## Omnibus test.
car::Anova(m2, type = '3')
m3 <- lmer(data = data, formula = Entropy ~ Age*WithinGameTrial*Game*LearnedFeat*IQ + (WithinGameTrial * (Game+LearnedFeat)|Subj))
summary(m3)
## Omnibus test.
car::Anova(m3, type = '3')
?isSingular
m3 <- lmer(data = data, formula = Entropy ~ Age*WithinGameTrial*Game*LearnedFeat*IQ + ((WithinGameTrial * (Game+LearnedFeat))|Subj))
summary(m3)
## Omnibus test.
car::Anova(m3, type = '3')
m3 <- lmer(data = data, formula = Entropy ~ Age*WithinGameTrial*LearnedFeat*IQ + (LearnedFeat|Subj))
summary(m3)
## Omnibus test.
car::Anova(m3, type = '3')
m3 <- lmer(data = data, formula = Entropy ~ Age*LearnedFeat*IQ + (LearnedFeat|Subj))
summary(m3)
## Omnibus test.
car::Anova(m3, type = '3')
m3 <- lmer(data = data, formula = Entropy ~ Age*LearnedFeat + (LearnedFeat|Subj))
summary(m3)
## Omnibus test.
car::Anova(m3, type = '3')
m3 <- lmer(data = data, formula = Entropy ~ Age*LearnedFeat + ((WithinGameTrial*Game)|Subj))
summary(m3)
## Omnibus test.
car::Anova(m3, type = '3')
m3 <- lmer(data = data, formula = Entropy ~ Age*LearnedFeat + ((WithinGameTrial+Game)|Subj))
summary(m3)
## Omnibus test.
car::Anova(m3, type = '3')
m3 <- lmer(data = data, formula = Entropy ~ Age*(WithinGameTrial + Game)*LearnedFeat + (1|Subj))
summary(m3)
## Omnibus test.
car::Anova(m3, type = '3')
m3 <- lmer(data = data, formula = Entropy ~ Age*(WithinGameTrial + Game) + (1|Subj))
summary(m3)
## Omnibus test.
car::Anova(m3, type = '3')
m3 <- lmer(data = data, formula = Entropy ~ Age*(WithinGameTrial + Game) + ((WithinGameTrial + Game)|Subj))
summary(m3)
## Omnibus test.
car::Anova(m3, type = '3')
